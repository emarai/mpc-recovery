name: Integration
on:
  push:
    branches:
      - main
      - develop
  pull_request:
env:
  RUSTFLAGS: -D warnings
jobs:
  test:
    strategy:
      matrix:
        # FIXME: macos-latest-xl is disabled since colima is erroring out right now
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      issues: write
      packages: read
      pull-requests: write
    name: Test
    steps:
      - uses: actions/checkout@v3
      - name: Install Docker
        if: ${{ matrix.os == 'macos-latest-xl' }}
        run: |
          brew install docker
          colima start
          # Colima does not expose the Docker socket by default, we have to symlink it
          # https://github.com/abiosoft/colima/blob/main/docs/FAQ.md#cannot-connect-to-the-docker-daemon-at-unixvarrundockersock-is-the-docker-daemon-running
          sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull Relayer Docker Image
        run: |
          docker pull ghcr.io/near/pagoda-relayer-rs-fastauth
          docker pull ghcr.io/near/sandbox
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - name: Install Protoc
        uses: arduino/setup-protoc@v1.1.2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: near/mpc-recovery:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Test
        run: cargo test -p mpc-recovery-integration-tests --jobs 1 -- --test-threads 1
        env:
          RUST_LOG: INFO
          RUST_BACKTRACE: 1

      - uses: bencherdev/bencher@v0.3.10
      - name: Run benchmarks
        id: benchmark
        # All the branching is used for tracking benchmarks: https://bencher.dev/docs/how-to/track-benchmarks/
        run: |
          bencher run \
          --if-branch "$GITHUB_REF_NAME" \
          --else-if-branch "$GITHUB_BASE_REF" \
          --else-if-branch main \
          --err \
          --github-actions ${{ secrets.GITHUB_TOKEN }} \
          --adapter rust_criterion \
          --file output.txt \
          "bencher mock"
      - name: Download previous benchmark data
        uses: actions/cache@v1
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      - name: Show and store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: output.txt
          summary-always: true
          # Where the previous data file is stored
          external-data-json-path: ./cache/benchmark-data.json
